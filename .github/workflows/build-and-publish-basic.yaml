---
# yamllint disable rule:line-length
name: Build and Publish Basic
on:
  workflow_call:
    inputs:
      branch-prerelease:
        description: "Branch to use for prereleases"
        required: false
        default: "prerelease"
        type: string
      branch-update-base:
        description: "Base name of temporary branch to use for creating update"
        required: false
        default: "chore/publish-update"
        type: string
      tag-prefix:
        description: "Prefix to use for version number when creating tag"
        required: false
        default: "v"
        type: string
      working-directory:
        description: "Working directory"
        required: false
        default: "."
        type: string
      templated-files:
        description: "Templated files to update with new tag"
        required: false
        default: ""
        type: string
      build-script:
        description: "Build script"
        required: false
        default: echo "No build script supplied"
        type: string
      test-results-directory:
        description: "Test results directory"
        required: false
        default: ""
        type: string
      release-on-default-branch:
        description: "Create releases on default branch"
        required: false
        default: true
        type: boolean
    secrets:
      ACCESS_TOKEN:
        description: "Access token"
        required: true
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.triggering_actor }}
  cancel-in-progress: true
jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ (github.event_name == 'push' && !contains(github.triggering_actor, '[bot]' )) || (github.event.issue.pull_request && (startsWith(github.event.comment.body, '.publish') || startsWith(github.event.comment.body, '.unpublish') || startsWith(github.event.comment.body, '.finalize'))) }}
    env:
      COMMENT_BODY: "${{ github.event.comment.body }}"
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      # publish-workflow-control
      - uses: aps831/gh-actions/publish-workflow-control@master
        id: control
        with:
          tag-prefix: ${{ inputs.tag-prefix }}
          branch-prerelease: ${{ inputs.branch-prerelease }}
          branch-update-base: ${{ inputs.branch-update-base }}
          release-on-default-branch: ${{ inputs.release-on-default-branch }}
          comment-body: "${{ env.COMMENT_BODY }}"
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # publish-workflow-control-start
      - uses: aps831/gh-actions/publish-workflow-control-start@master
        with:
          release-on-default-branch: ${{ inputs.release-on-default-branch }}
          build: ${{ steps.control.outputs.build }}
          publish: ${{ steps.control.outputs.publish }}
          finalize: ${{ steps.control.outputs.finalize }}
          unpublish: ${{ steps.control.outputs.unpublish }}
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }} # prevent issue_comment trigger

      # project-update-basic
      - uses: aps831/gh-actions/project-update-basic@master
        if: ${{ steps.control.outputs.update == 'true' }}
        with:
          tag: ${{ steps.control.outputs.tag-version-next }}
          working-directory: ${{ inputs.working-directory }}
          templated-files: ${{ inputs.templated-files }}
          branch-event: ${{ steps.control.outputs.branch-event }}
          branch-update: ${{ steps.control.outputs.branch-update }}
          persist-updates: ${{ steps.control.outputs.publish }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # build-basic-project
      - uses: aps831/gh-actions/build-basic-project@master
        if: ${{ steps.control.outputs.build == 'true' }}
        with:
          working-directory: ${{ inputs.working-directory }}
          branch-build: ${{ steps.control.outputs.branch-build }}
          build-script: ${{ inputs.build-script }}
          test-results-directory: ${{ inputs.test-results-directory }}

      # output-and-upload-basic-test-outputs
      - uses: aps831/gh-actions/output-and-upload-basic-test-outputs@master
        if: ${{ always() }}
        with:
          test-results-directory: ${{ inputs.test-results-directory }}

      # project-update-cleanup
      - uses: aps831/gh-actions/project-update-cleanup@master
        if: ${{ failure() && steps.control.outputs.update == 'true' }}
        with:
          tag: ${{ steps.control.outputs.tag-version-next }}
          branch-event: ${{ steps.control.outputs.branch-event }}
          branch-update: ${{ steps.control.outputs.branch-update }}

      # github-release-publish
      - uses: aps831/gh-actions/github-release-publish@master
        if: ${{ steps.control.outputs.publish == 'true' }}
        id: release
        with:
          tag: ${{ steps.control.outputs.tag-version-next }}
          branch-update: ${{ steps.control.outputs.branch-update }}
          prerelease: ${{ steps.control.outputs.prerelease }}
          draft: ${{ steps.control.outputs.draft }}
          build-artifacts-upload-name: ""
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # github-release-unpublish
      - uses: aps831/gh-actions/github-release-unpublish@master
        if: ${{ steps.control.outputs.unpublish == 'true' }}
        with:
          tag: ${{ steps.control.outputs.tag-version-next }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # github-release-finalize
      - uses: aps831/gh-actions/github-release-finalize@master
        if: ${{ steps.control.outputs.finalize == 'true' }}
        with:
          tag: ${{ steps.control.outputs.tag-version-next }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # project-merge-update-branch
      - uses: aps831/gh-actions/project-merge-update-branch@master
        if: ${{ steps.control.outputs.update == 'true' }}
        with:
          target-branch: ${{ steps.control.outputs.branch-publish }}
          source-branch: ${{ steps.control.outputs.branch-update }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # project-merge-publish-branch
      - uses: aps831/gh-actions/project-merge-publish-branch@master
        if: ${{ steps.control.outputs.finalize == 'true' }}
        with:
          target-branch: ${{ steps.control.outputs.branch-default }}
          source-branch: ${{ steps.control.outputs.branch-publish }}

      # publish-workflow-control-end
      - uses: aps831/gh-actions/publish-workflow-control-end@master
        if: ${{ always() }}
        with:
          release-on-default-branch: ${{ inputs.release-on-default-branch }}
          build: ${{ steps.control.outputs.build }}
          publish: ${{ steps.control.outputs.publish }}
          finalize: ${{ steps.control.outputs.finalize }}
          unpublish: ${{ steps.control.outputs.unpublish }}
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }} # prevent issue_comment trigger
