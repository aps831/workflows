---
name: Poetry Audit
on:
  workflow_call:
    inputs:
      working-directory:
        required: false
        type: string
        default: "."
      python-version:
        required: true
        type: string
      poetry-version:
        required: true
        type: string
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.triggering_actor }}
  cancel-in-progress: true
permissions:
  contents: read
jobs:
  audit:
    if: (github.triggering_actor != 'dependabot[bot]')
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4.2.2

      - uses: aps831/gh-actions/set-up-python@master
        with:
          python-version: ${{ inputs.python-version }}
          poetry-version: ${{ inputs.poetry-version }}

      - working-directory: ${{ inputs.working-directory }}
        run: |
          poetry lock
          pip install pip-audit
          pip-audit -r <(poetry export -f requirements.txt) >& audit.txt

      - name: Output step summary
        if: ${{ always() }}
        working-directory: ${{ inputs.working-directory }}
        run: |
          echo "**Poetry Audit Production Summary**" >> $GITHUB_STEP_SUMMARY
          echo '```text' >> $GITHUB_STEP_SUMMARY
          cat audit.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
