---
name: Driftctl AWS
on:
  workflow_call:
    inputs:
      aws-s3-state:
        required: true
        type: string
      aws-region:
        required: true
        type: string
    secrets:
      aws-role-arn:
        required: true
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read
jobs:
  driftctl:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # pin@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@5fd3084fc36e372ff1fff382a39b10d03659f355 # pin@v2
        with:
          role-to-assume: ${{ secrets.aws-role-arn }}
          role-session-name: driftctl-session
          aws-region: ${{ inputs.aws-region }}

      - name: Calculate scan from argument
        id: from
        run: |
          from=""
          while IFS= read -r line
          do
            if [[ -n "$line" ]]
            then
              from="$from --from $line"
            fi
          done <<< "${{ inputs.aws-s3-state }}"
          echo "from=$from" >> $GITHUB_OUTPUT

      - name: Run Driftctl
        continue-on-error: true
        uses: snyk/driftctl-action@7450dbe454e717693c2e5bb0f6f11afd4e5535e1 # pin@v1
        with:
          version: v0.40.0
          args: ${{ steps.from.outputs.from }} -o json://driftctl.json

      - name: Output step summary
        if: ${{ always() }}
        run: |
          count=$(sudo cat driftctl.json | jq '.summary.total_unmanaged')
          echo "**Driftctl Summary**" >> $GITHUB_STEP_SUMMARY
          echo "There are $count unmanaged resources" >> $GITHUB_STEP_SUMMARY
          echo '```text' >> $GITHUB_STEP_SUMMARY
          sudo cat driftctl.json >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Calculate exit value
        if: ${{ always() }}
        run: |
          count=$(sudo cat driftctl.json | jq '.summary.total_unmanaged')
          exit "$count"
