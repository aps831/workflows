---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Dependency Check Audit
on:
  workflow_call:
    inputs:
      settings-file:
        required: false
        type: string
      java-version:
        required: true
        type: string
      working-directory:
        required: false
        type: string
        default: "."
      preinstall-command:
        required: false
        type: string
    secrets:
      ACCESS_TOKEN:
        required: true
env:
  ENFORCER_FAIL: false
  THRESHOLD: 6
jobs:
  check:
    runs-on: ubuntu-latest
    if: (github.actor != 'dependabot[bot]')
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3.1.0

      - name: Set up JDK ${{ inputs.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: "adopt"
          cache: "maven"
          server-id: github
          server-username: GITHUB_USER_REF
          server-password: GITHUB_TOKEN_REF # pragma: allowlist secret

      - name: Install csv2md
        run: |
          pip install csv2md==1.1.2

      - name: Run preinstall command
        if: ${{ inputs.preinstall-command != '' }}
        working-directory: ${{ inputs.working-directory }}
        run: ${{ inputs.preinstall-command }}

      - name: Install maven settings.xml
        if: ${{ inputs.settings-file != '' }}
        working-directory: ${{ inputs.working-directory }}
        run: |
          cp ${{ inputs.settings-file }} ~/.m2/settings.xml

      - name: Install dependencies
        working-directory: ${{ inputs.working-directory }}
        run: |
          mvn --batch-mode -DskipTests -Denforcer.fail=${{ env.ENFORCER_FAIL }} clean install
          mvn --batch-mode dependency:copy-dependencies
        env:
          GITHUB_USER_REF: ${{ github.actor }}
          GITHUB_TOKEN_REF: ${{ secrets.ACCESS_TOKEN }}

      - name: Run dependency check
        uses: dependency-check/Dependency-Check_Action@1.1.0
        env:
          JAVA_HOME: /opt/jdk
        with:
          project: "Project"
          path: ${{ inputs.working-directory }}
          format: "CSV"
          args: >
            --failOnCVSS ${{ env.THRESHOLD }}
            --enableRetired

      - name: Output step summary
        if: ${{ always() }}
        run: |
          echo "# Dependency Check Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          csv2md reports/dependency-check-report.csv >> $GITHUB_STEP_SUMMARY
