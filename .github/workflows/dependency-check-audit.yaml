---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Dependency Check Audit
on:
  workflow_call:
    inputs:
      settings-file:
        required: false
        type: string
      java-version:
        required: true
        type: string
      working-directory:
        required: false
        type: string
        default: "."
      preinstall-command:
        required: false
        type: string
    secrets:
      ACCESS_TOKEN:
        required: true
env:
  ENFORCER_FAIL: false
  THRESHOLD: 6
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read
jobs:
  check:
    if: (github.triggering_actor != 'dependabot[bot]')
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # pin@v3.1.0

      - name: Set up JDK ${{ inputs.java-version }}
        uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 # pin@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: "adopt"
          cache: "maven"
          server-id: github
          server-username: GITHUB_USER_REF
          server-password: GITHUB_TOKEN_REF # pragma: allowlist secret

      - name: Run preinstall command
        if: ${{ inputs.preinstall-command != '' }}
        working-directory: ${{ inputs.working-directory }}
        run: ${{ inputs.preinstall-command }}

      - name: Install maven settings.xml
        if: ${{ inputs.settings-file != '' }}
        working-directory: ${{ inputs.working-directory }}
        run: |
          cp ${{ inputs.settings-file }} ~/.m2/settings.xml

      - name: Install dependencies
        working-directory: ${{ inputs.working-directory }}
        run: |
          mvn --batch-mode -DskipTests -Denforcer.fail=${{ env.ENFORCER_FAIL }} clean install
          mvn --batch-mode dependency:copy-dependencies
        env:
          GITHUB_USER_REF: ${{ github.actor }}
          GITHUB_TOKEN_REF: ${{ secrets.ACCESS_TOKEN }}

      - name: Run dependency check
        uses: dependency-check/Dependency-Check_Action@75ba02d6183445fe0761d26e836bde58b1560600 # pin@1.1.0
        env:
          JAVA_HOME: /opt/jdk
        with:
          project: "Project"
          path: ${{ inputs.working-directory }}
          format: "SARIF"
          args: >
            --failOnCVSS ${{ env.THRESHOLD }} --enableRetired

      - uses: taiki-e/install-action@8984d603c208823d3c1a1b796f4081736f3ae3f9 # pin@v2
        if: ${{ always() }}
        with:
          tool: sarif-fmt

      - name: Output step summary
        if: ${{ always() }}
        run: |
          echo "**Dependency Check Summary**" >> $GITHUB_STEP_SUMMARY
          echo '```text' >> $GITHUB_STEP_SUMMARY
          cat reports/dependency-check-report.sarif | sarif-fmt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
