# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Dependency Check Audit
on:
  workflow_call:
    inputs:
      settings-file:
        required: false
        type: string
      java-version:
        required: true
        type: string
      working-directory:
        required: false
        type: string
        default: "."
    secrets:
      ACCESS_TOKEN:
        required: true
env:
  ENFORCER_FAIL: false
  THRESHOLD: 6
jobs:
  check:
    runs-on: ubuntu-latest
    if: (github.actor != 'dependabot[bot]')
    permissions:
      contents: read
      issues: write
    steps:
      - uses: actions/checkout@v3.2.0

      - name: Set up JDK ${{ inputs.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: "adopt"
          cache: "maven"
          server-id: github
          server-username: GITHUB_USER_REF
          server-password: GITHUB_TOKEN_REF # pragma: allowlist secret

      - name: Run audit with Maven
        working-directory: ${{ inputs.working-directory }}
        run: |
          mvn ${{ inputs.settings-file && format('{0} {1}', '--settings', inputs.settings-file) || '' }} --batch-mode -DskipTests -Denforcer.fail=${{ env.ENFORCER_FAIL }} clean install
          mvn ${{ inputs.settings-file && format('{0} {1}', '--settings', inputs.settings-file) || '' }} --batch-mode -Denforcer.fail=${{ env.ENFORCER_FAIL }} -Ddependency-check.threshold=${{ env.THRESHOLD }} dependency-check:aggregate
        env:
          GITHUB_USER_REF: ${{ github.actor }}
          GITHUB_TOKEN_REF: ${{ secrets.ACCESS_TOKEN }}

      - name: Create Github issue
        if: ${{ failure() && github.event_name == 'schedule' }}
        run: gh issue create --title "Review Maven dependency check audit" --body 'Run `mvn -Denforcer.fail=${{ env.ENFORCER_FAIL }} -Ddependency-check.threshold=${{ env.THRESHOLD }} dependency-check:aggregate`'
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Archive report
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: report
          path: |
            ${{ inputs.working-directory }}/target/dependency-check-report.html
