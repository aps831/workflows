---
name: Terraform check
on:
  workflow_call:
    inputs:
      terraform-version:
        required: true
        type: string
      working-directory:
        required: false
        type: string
        default: "."
env:
  TF_PLUGIN_CACHE_DIR: ${{ github.workspace }}/.terraform.d/plugin-cache
jobs:
  check-for-no-ci-cd-run:
    uses: aps831/workflows/.github/workflows/check-for-no-ci-cd-run.yaml@master
    permissions:
      contents: read
      issues: read
      pull-requests: read

  build:
    permissions:
      contents: read
    if: needs.check-for-no-ci-cd-run.outputs.continue == 'true'
    needs:
      - check-for-no-ci-cd-run
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # pin@v3.1.0

      - name: Install ansi2txt
        run: sudo apt install colorized-logs

      - name: Install Terraform
        uses: hashicorp/setup-terraform@bbe167fbdaa1a3bd046bdd70eba9dd3dddcca99c # pin@v2.0.2
        with:
          terraform_version: ${{ inputs.terraform-version }}
          terraform_wrapper: false

      - name: Create Terraform Plugin Cache Dir
        run: mkdir --parents $TF_PLUGIN_CACHE_DIR

      - name: Cache Terraform
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # pin@v3.3.2
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}

      - name: Terraform init
        working-directory: ${{ inputs.working-directory }}
        run: terraform init -backend=false

      - name: Terraform format check
        working-directory: ${{ inputs.working-directory }}
        run: |
          terraform fmt -check -recursive > format.log
          ansi2txt < format.log > format.txt

      - name: Output Terraform format step summary
        if: ${{ always() }}
        working-directory: ${{ inputs.working-directory }}
        run: |
          echo "**Terraform Format Check Summary**" >> $GITHUB_STEP_SUMMARY
          echo '```text' >> $GITHUB_STEP_SUMMARY
          cat format.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Terraform validate
        working-directory: ${{ inputs.working-directory }}
        run: |
          terraform validate > validate.log
          ansi2txt < validate.log > validate.txt

      - name: Output Terraform validate step summary
        if: ${{ always() }}
        working-directory: ${{ inputs.working-directory }}
        run: |
          echo "**Terraform Validate Summary**" >> $GITHUB_STEP_SUMMARY
          echo '```text' >> $GITHUB_STEP_SUMMARY
          cat validate.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
