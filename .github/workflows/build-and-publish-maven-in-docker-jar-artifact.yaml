---
# yamllint disable rule:line-length
name: Build and Publish Maven in Docker Jar Artifact
on:
  workflow_call:
    inputs:
      branch-prerelease:
        description: "Branch to use for prereleases"
        required: false
        default: "prerelease"
        type: string
      branch-update-base:
        description: "Base name of temporary branch to use for creating update"
        required: false
        default: "chore/publish-update"
        type: string
      tag-prefix:
        description: "Prefix to use for version number when creating tag"
        required: false
        default: "v"
        type: string
      working-directory:
        description: "Working directory"
        required: false
        default: "."
        type: string
      templated-files:
        description: "Templated files to update with new tag"
        required: false
        default: ""
        type: string
      settings-file:
        required: false
        type: string
      release-on-default-branch:
        description: "Create releases on default branch"
        required: false
        default: true
        type: boolean
    secrets:
      ACCESS_TOKEN:
        description: "Access token"
        required: true
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push' && !contains(github.triggering_actor, '[bot]' )) || (github.event.issue.pull_request && !contains(github.event.comment.body, '.noop') && !contains(github.event.comment.body, '.deploy')) }}
    env:
      COMMENT_BODY: "${{ github.event.comment.body }}"
    permissions:
      contents: write
      issues: write
      pull-requests: write
      packages: write
    steps:
      # publish-workflow-control
      - uses: aps831/gh-actions/publish-workflow-control@master
        id: control
        with:
          tag-prefix: ${{ inputs.tag-prefix }}
          branch-prerelease: ${{ inputs.branch-prerelease }}
          branch-update-base: ${{ inputs.branch-update-base }}
          release-on-default-branch: ${{ inputs.release-on-default-branch }}
          comment-body: "${{ env.COMMENT_BODY }}"
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # project-update-maven
      - uses: aps831/gh-actions/project-update-maven@master
        if: ${{ steps.control.outputs.update == 'true' }}
        with:
          pom-version: ${{ steps.control.outputs.version-next }}
          pom-parent-version: ${{ steps.control.outputs.version-next }}
          snapshot: ${{ steps.control.outputs.prerelease }}
          tag: ${{ steps.control.outputs.tag-version-next }}
          working-directory: ${{ inputs.working-directory }}
          templated-files: ${{ inputs.templated-files }}
          branch-event: ${{ steps.control.outputs.branch-event }}
          branch-update: ${{ steps.control.outputs.branch-update }}
          persist-updates: ${{ steps.control.outputs.publish }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # build-maven-in-docker-jar-artifact
      - uses: aps831/gh-actions/build-maven-in-docker-jar-artifact@master
        if: ${{ steps.control.outputs.build == 'true' }}
        id: build
        with:
          branch-build: ${{ steps.control.outputs.branch-build }}
          build-args: ENFORCER_FAIL=${{ steps.control.outputs.release }}
          working-directory: ${{ inputs.working-directory }}
          dockerfile: "Dockerfile"
          stage-build: "build"
          stage-output: "target"
          stage-status: "status"
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # project-update-cleanup
      - uses: aps831/gh-actions/project-update-cleanup@master
        if: ${{ failure() && steps.control.outputs.update == 'true' }}
        with:
          tag: ${{ steps.control.outputs.tag-version-next }}
          branch-event: ${{ steps.control.outputs.branch-event }}
          branch-update: ${{ steps.control.outputs.branch-update }}

      # github-release-publish
      - uses: aps831/gh-actions/github-release-publish@master
        if: ${{ steps.control.outputs.publish == 'true' }}
        id: release
        with:
          tag: ${{ steps.control.outputs.tag-version-next }}
          branch-update: ${{ steps.control.outputs.branch-update }}
          prerelease: ${{ steps.control.outputs.prerelease }}
          draft: ${{ steps.control.outputs.draft }}
          build-artifacts-upload-name: ${{ steps.build.outputs.build-artifacts-release-upload-name }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # github-release-unpublish
      - uses: aps831/gh-actions/github-release-unpublish@master
        if: ${{ steps.control.outputs.unpublish == 'true' }}
        with:
          tag: ${{ steps.control.outputs.tag-version-next }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # github-release-finalize
      - uses: aps831/gh-actions/github-release-finalize@master
        if: ${{ steps.control.outputs.finalize == 'true' }}
        with:
          tag: ${{ steps.control.outputs.tag-version-next }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # github-packages-maven-publish
      - uses: aps831/gh-actions/github-packages-maven-publish@master
        if: ${{ steps.control.outputs.publish == 'true' }}
        with:
          settings-file: ${{ inputs.settings-file }}
          build-artifacts-upload-name: ${{ steps.build.outputs.build-artifacts-publish-upload-name }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # action-calculate-maven-github-package-name
      - uses: aps831/gh-actions/action-calculate-maven-github-package-name@master
        id: package-name
        if: ${{ steps.control.outputs.unpublish == 'true' }}
        with:
          working-directory: ${{ inputs.working-directory }}

      # github-packages-unpublish
      - uses: aps831/gh-actions/github-packages-unpublish@master
        if: ${{ steps.control.outputs.unpublish == 'true' }}
        with:
          package-type: "maven"
          package-name: "${{ steps.package-name.outputs.package-name }}"
          version: ${{ steps.control.outputs.version-next }}
          tag: ${{ steps.control.outputs.tag-version-next }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # project-update-maven-snapshot
      - uses: aps831/gh-actions/project-update-maven-snapshot@master
        if: ${{ steps.control.outputs.release == 'true' }}
        with:
          pom-version: ${{ steps.control.outputs.version-next }}
          pom-parent-version: ${{ steps.control.outputs.version-next }}
          working-directory: ${{ inputs.working-directory }}
          tag: ${{ steps.control.outputs.tag-version-next }}
          branch-update: ${{ steps.control.outputs.branch-update }}

      # project-merge-update-branch
      - uses: aps831/gh-actions/project-merge-update-branch@master
        if: ${{ steps.control.outputs.update == 'true' }}
        with:
          target-branch: ${{ steps.control.outputs.branch-publish }}
          source-branch: ${{ steps.control.outputs.branch-update }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # project-merge-publish-branch
      - uses: aps831/gh-actions/project-merge-publish-branch@master
        if: ${{ steps.control.outputs.finalize == 'true' }}
        with:
          target-branch: ${{ steps.control.outputs.branch-default }}
          source-branch: ${{ steps.control.outputs.branch-publish }}
